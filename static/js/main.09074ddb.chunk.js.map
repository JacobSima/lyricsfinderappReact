{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","Context","React","createContext","reducer","state","action","type","Object","objectSpread","trackList","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","showSpinner","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","resData","wrap","_context","prev","next","fetch","sent","json","message","body","track_list","t0","console","log","stop","props","children","Component","Consumer","Spinner","src","spinner","alt","style","spinnerStyle","width","margin","display","Track","track","artist_name","track_name","Link","to","track_id","Tracks","Fragment","map","item","tracks_Track","Search","trackTitle","onChange","e","defineProperty","target","name","findTrack","preventDefault","_this2","onSubmit","bind","placeholder","index","Search_Search","tracks_Tracks","Lyrics","lyrics","match","params","id","res_2","resData_2","_this$state","undefined","keys","lyrics_body","album_id","primary_genres","music_genre_list","music_genre","music_genre_name","explicit","App","context_Provider","HashRouter","layout_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09074ddb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.078aa3f0.gif\";","import React from 'react';\r\n\r\nconst Navbar = ()=>{\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark mb-5\">\r\n        <span className=\"navbar-brand mb-0 h1 mx-auto\">LyricFinder</span>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer =(state,action)=>{\r\n  switch(action.type){\r\n    case 'SEARC_TRACKS':\r\n    return {\r\n      ...state,\r\n      trackList:action.payload,\r\n      heading:'Search Results'\r\n    }\r\n    default:\r\n    return state;\r\n  }\r\n}\r\n\r\n export class Provider extends Component {\r\n   state={\r\n     trackList:[\r\n      //  {track:{track_name:'abc'}},\r\n      //  {track:{track_name:'123'}},\r\n      //  {track:{track_name:'9282'}}\r\n     ],\r\n     heading:'Top 10 Tracks',\r\n     showSpinner:true,\r\n     dispatch:action =>this.setState(state =>reducer(state,action))\r\n   }\r\n\r\n   async componentDidMount(){\r\n     try{\r\n      const res = await fetch(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get&page=1&page_size=10&country=us&f_has_lyrics=1&apikey=2d16a9ba11078dd085c304c62ac525a8`);\r\n      const resData= await res.json();\r\n      this.setState({trackList:resData.message.body.track_list,showSpinner:false})\r\n     }\r\n     catch(ex){console.log(ex)}\r\n    \r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Context.Provider value={this.state}>\r\n              {this.props.children}\r\n        </Context.Provider>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer\r\n\r\n","import React from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default()=>{\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        alt=\"loading...\"\r\n        style={spinnerStyle}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nconst spinnerStyle ={\r\n   width:'200px',\r\n   margin:'40px auto',\r\n   display:'block'\r\n}\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Track =(props)=>{\r\n  const{track}=props;\r\n  return (\r\n    <div className=\"col-md-6\">\r\n       <div className=\"card mb-4 shadow-sm\">\r\n       <div className=\"card-body\">\r\n        <h5>{track.artist_name}</h5>\r\n        <p className=\"card-text\">\r\n         <strong><i className=\"fas fa-play\"></i>Track</strong>:{track.track_name}\r\n         <br/>\r\n         <strong><i className=\"fas fa-compact-disc\"></i>Album</strong>:{track.track_name}\r\n        </p>\r\n        <Link to ={`/lyrics/track/${track.track_id}`} className=\"btn btn-dark btn-block\">\r\n         <i className=\"fas-da-chevron-right\">View Lyrics</i>\r\n        </Link>\r\n       </div>\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Track;\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport Spinner from '../layout/Spinner';\r\nimport Track from './Track';\r\n\r\n class Tracks extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value=>{\r\n          const {trackList,showSpinner,heading} =value;\r\n          if(showSpinner){\r\n            return <Spinner/>\r\n          }else{\r\n             return (\r\n               <React.Fragment>\r\n                 <h3 className=\"text-center mb-4\">{heading}</h3>\r\n                 <div className=\"row\">\r\n                 {trackList.map(item=>(<Track key ={item.track.track_id}  track ={item.track}/>))}\r\n                 </div>\r\n               </React.Fragment>\r\n              \r\n             )\r\n          }\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tracks;\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\n\r\nexport default class Search extends Component {\r\n  state={\r\n    trackTitle:''\r\n  }\r\n\r\n  onChange=e=>{\r\n   this.setState({[e.target.name]:e.target.value})\r\n  }\r\n\r\n\r\n\r\n  findTrack = async(dispatch,e)=>{\r\n    e.preventDefault();\r\n    const res = await fetch(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=2d16a9ba11078dd085c304c62ac525a8`);\r\n    const resData = await res.json();\r\n    dispatch({type:'SEARC_TRACKS',payload:resData.message.body.track_list});\r\n\r\n    this.setState({trackTitle:''})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value =>{\r\n          const {dispatch} =value\r\n          return (\r\n            <div className=\"card card-body mb-4 p-4\">\r\n            <h1 className=\"display-4 text-center\">\r\n             <i className=\"fas fa-music\"></i>Search For a Song\r\n            </h1>\r\n            <p className=\"lead text-center\">Get The lyrics for any songs</p>\r\n            <form onSubmit ={this.findTrack.bind(this,dispatch)}>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Song title...\" name=\"trackTitle\"  value = {this.state.trackTitle} onChange ={this.onChange}/>\r\n              </div>\r\n              <button className=\"btn btn-primary btn-lg btn-block mb-5\" type=\"submit\">Get Track Lyrics</button>\r\n            </form>\r\n            \r\n           </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport Tracks from '../tracks/Tracks';\r\nimport Search from '../tracks/Search';\r\n const index =()=>{\r\n  return (\r\n    <React.Fragment>\r\n      <Search/>\r\n      <Tracks/>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default index;\r\n","import React, { Component } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Lyrics extends Component {\r\n  state={\r\n    track:{},\r\n    lyrics:{}\r\n  }\r\n  async componentDidMount(){\r\n       try{\r\n         const res = await fetch(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=2d16a9ba11078dd085c304c62ac525a8`);\r\n         const resData = await res.json();\r\n         this.setState({lyrics:resData.message.body.lyrics});\r\n\r\n         const res_2 =await fetch(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=2d16a9ba11078dd085c304c62ac525a8`);\r\n         const resData_2 = await res_2.json();\r\n         this.setState({track:resData_2.message.body.track});\r\n       }catch(ex){console.log(ex)}\r\n  }\r\n  render() {\r\n    const {track,lyrics} = this.state;\r\n    console.log(track)\r\n    if(track === undefined || \r\n      lyrics === undefined || \r\n      Object.keys(track).length ===0 || \r\n      Object.keys(lyrics).length ===0 ){\r\n\r\n         return <Spinner/>\r\n\r\n    }else{\r\n        return (\r\n          <React.Fragment>\r\n          <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">\r\n           GO Back\r\n          </Link>\r\n          <div className=\"card\">\r\n           <h5 className=\"card-header\">\r\n            {track.track_name} by <span className=\"text-secondary\">{track.artist_name}</span>\r\n           </h5>\r\n           <div className=\"card-body\">\r\n           <p className=\"card-text\">\r\n           {lyrics.lyrics_body}\r\n           </p>\r\n           </div>\r\n          </div>\r\n          <ul className=\"list-group mt-3\">\r\n           <li className=\"list-group-item\">\r\n           <strong>Album ID</strong>: {track.album_id}\r\n           </li>\r\n           <li className=\"list-group-item\">\r\n           <strong>Song Genre</strong>: {track.primary_genres.music_genre_list[0].music_genre.music_genre_name}\r\n           </li>\r\n          </ul>\r\n          <li className=\"list-group-item\">\r\n           <strong>Explicit Words</strong>: {track.explicit === 0 ? 'NO':'YES'}\r\n          </li>\r\n          \r\n          </React.Fragment>\r\n        )\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom';\nimport index from './components/layout';\nimport{ Provider} from './context';\nimport Lyrics  from './components/tracks/Lyrics';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n      <Router>\n      <React.Fragment>\n       <Navbar/>\n       <div className=\"container\">\n       <Switch>\n         <Route exact path =\"/\" component={index} />\n         <Route  exact path =\"/lyrics/track/:id\" component={Lyrics}/>\n       </Switch>\n       </div>\n      </React.Fragment>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}